-- A DUT entity is used to wrap your design.
--  This example shows how you can do this for the
--  Full-adder.

library ieee;
use ieee.std_logic_1164.all;

entity nand_or is
   port(in1,in2:in std_logic;
       	out1: out std_logic);
end entity;

architecture struct of nand_or is
	-- Instantiate your own top Module component in place of ALU_1
	
signal sig1,sig2:std_logic;

begin

   -- input/output vector element ordering is critical,
   -- and must match the ordering in the trace file!
   inst1:NAND_2  PORT map(A=>in1, B=>in12,Y=> sig1);
	inst2:NAND_2  PORT map(A=>in2, B=>in2,Y=> sig2);
	inst3:NAND_2  PORT map(A=>sig1, B=>sig2,Y=> out1);
end architecture;

